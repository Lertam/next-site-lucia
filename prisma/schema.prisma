// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum UserRole {
  USER
  RETOUCHER
  ADMIN
}

model User {
  id             String    @id
  sessions       Session[]
  login          String    @unique
  email          String    @unique
  hashedPassword String
  role           UserRole  @default(USER)
  image          String?

  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  passwordResetToken PasswordResetToken[]
}

model Session {
  id        String   @id
  expiresAt DateTime
  userId    String
  user      User     @relation(references: [id], fields: [userId])
}

model PasswordResetToken {
  userId  String   @id
  user    User     @relation(fields: [userId], references: [id])
  token   String   @unique
  expires DateTime
  used    Boolean  @default(false)

  @@index(fields: [userId, token])
}

model RetouchService {
  id          String @id
  title       String
  weight      Int    @default(0)
  description String @default("")
  image       String

  prices RetouchPrice[]
}

model RetouchPrice {
  id          String  @id
  title       String
  description String
  price       Int
  weight      Int     @default(0)
  express     Boolean @default(false)

  serviceId String
  service   RetouchService @relation(fields: [serviceId], references: [id])
}

model RetouchVariant {
  id String @id
  title String
  description String
  weight Int @default(0)
  price Int
  image String
  withText Boolean @default(false)
  withFiles Boolean @default(false)
}